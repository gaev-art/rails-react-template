---
openapi: 3.0.1
info:
  title: React Starter Kit API
  version: v1
  description: RESTful API for React Starter Kit with authentication and user management
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  "/api/v1/auth/login":
    post:
      summary: Login user
      tags:
      - Authentication
      description: Authenticate user with email and password
      parameters: []
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: John Doe
                          email:
                            type: string
                            example: user@example.com
                          role:
                            type: string
                            example: user
                          verified:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            format: date_time
                          updated_at:
                            type: string
                            format: date_time
                      tokens:
                        type: object
                        properties:
                          access_token:
                            type: string
                            example: eyJhbGciOiJIUzI1NiJ9...
                          refresh_token:
                            type: string
                            example: eyJhbGciOiJIUzI1NiJ9...
                          token_type:
                            type: string
                            example: Bearer
                          expires_in:
                            type: integer
                            example: 900
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid email or password
        '403':
          description: Account not verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Account not verified
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
              required:
              - auth
  "/api/v1/auth/register":
    post:
      summary: Register user
      tags:
      - Authentication
      description: Create a new user account
      parameters: []
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Registration successful
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: John Doe
                          email:
                            type: string
                            example: user@example.com
                          role:
                            type: string
                            example: user
                          verified:
                            type: boolean
                            example: false
                          created_at:
                            type: string
                            format: date_time
                          updated_at:
                            type: string
                            format: date_time
                      tokens:
                        type: object
                        properties:
                          access_token:
                            type: string
                            example: eyJhbGciOiJIUzI1NiJ9...
                          refresh_token:
                            type: string
                            example: eyJhbGciOiJIUzI1NiJ9...
                          token_type:
                            type: string
                            example: Bearer
                          expires_in:
                            type: integer
                            example: 900
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Registration failed
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: password123
                password_confirmation:
                  type: string
                  example: password123
              required:
              - name
              - email
              - password
              - password_confirmation
  "/api/v1/auth/refresh":
    post:
      summary: Refresh access token
      tags:
      - Authentication
      description: Refresh access token using refresh token
      parameters: []
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Token refreshed successfully
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiJ9...
                      token_type:
                        type: string
                        example: Bearer
                      expires_in:
                        type: integer
                        example: 900
        '401':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Invalid token: ...'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiJ9...
              required:
              - refresh_token
  "/api/v1/auth/logout":
    delete:
      summary: Logout user
      tags:
      - Authentication
      description: Logout user and invalidate session
      security:
      - Bearer: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Logout successful
                  data:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid token
  "/api/v1/auth/me":
    get:
      summary: Get current user
      tags:
      - Authentication
      description: Get current authenticated user profile
      security:
      - Bearer: []
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User profile retrieved
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: John Doe
                          email:
                            type: string
                            example: user@example.com
                          role:
                            type: string
                            example: user
                          verified:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            format: date_time
                          updated_at:
                            type: string
                            format: date_time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid token
  "/api/v1/roles":
    get:
      summary: List roles
      tags:
      - Roles
      description: Get list of all roles (admin only)
      security:
      - Bearer: []
      responses:
        '200':
          description: Roles list retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Roles retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: admin
                        description:
                          type: string
                          example: Administrator role
                        created_at:
                          type: string
                          format: date_time
                        updated_at:
                          type: string
                          format: date_time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Access denied
    post:
      summary: Create role
      tags:
      - Roles
      description: Create a new role (admin only)
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: Role created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Role created successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: moderator
                      description:
                        type: string
                        example: Moderator role
                      created_at:
                        type: string
                        format: date_time
                      updated_at:
                        type: string
                        format: date_time
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Role creation failed
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: moderator
                description:
                  type: string
                  example: Moderator role
              required:
              - name
  "/api/v1/roles/{id}":
    get:
      summary: Get role
      tags:
      - Roles
      description: Get specific role by ID (admin only)
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: Role ID
        schema:
          type: integer
      responses:
        '200':
          description: Role retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Role retrieved successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: admin
                      description:
                        type: string
                        example: Administrator role
                      created_at:
                        type: string
                        format: date_time
                      updated_at:
                        type: string
                        format: date_time
        '404':
          description: Role not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Record not found
    patch:
      summary: Update role
      tags:
      - Roles
      description: Update role information (admin only)
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: Role ID
        schema:
          type: integer
      responses:
        '200':
          description: Role updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Role updated successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: updated-role
                      description:
                        type: string
                        example: Updated role description
                      created_at:
                        type: string
                        format: date_time
                      updated_at:
                        type: string
                        format: date_time
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: updated-role
                description:
                  type: string
                  example: Updated role description
    delete:
      summary: Delete role
      tags:
      - Roles
      description: Delete role (admin only)
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: Role ID
        schema:
          type: integer
      responses:
        '200':
          description: Role deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Role deleted successfully
  "/api/v1/users":
    get:
      summary: List users
      tags:
      - Users
      description: Get list of all users (admin only)
      security:
      - Bearer: []
      parameters:
      - name: page
        in: query
        required: false
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Items per page
        schema:
          type: integer
      responses:
        '200':
          description: Users list retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Users retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: John Doe
                        email:
                          type: string
                          example: user@example.com
                        role:
                          type: string
                          example: user
                        verified:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          format: date_time
                        updated_at:
                          type: string
                          format: date_time
                  meta:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      per_page:
                        type: integer
                        example: 20
                      total:
                        type: integer
                        example: 100
                      total_pages:
                        type: integer
                        example: 5
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Access denied
  "/api/v1/users/{id}":
    get:
      summary: Get user
      tags:
      - Users
      description: Get specific user by ID
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: integer
      responses:
        '200':
          description: User retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User retrieved successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: user@example.com
                      role:
                        type: string
                        example: user
                      verified:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        format: date_time
                      updated_at:
                        type: string
                        format: date_time
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Record not found
    patch:
      summary: Update user
      tags:
      - Users
      description: Update user information
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: integer
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User updated successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Updated Name
                      email:
                        type: string
                        example: updated@example.com
                      role:
                        type: string
                        example: user
                      verified:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        format: date_time
                      updated_at:
                        type: string
                        format: date_time
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User update failed
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Updated Name
                email:
                  type: string
                  format: email
                  example: updated@example.com
    delete:
      summary: Delete user
      tags:
      - Users
      description: Delete user (admin only)
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: integer
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User deleted successfully
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Access denied
servers:
- url: http://localhost:3000
  description: Development server
- url: https://api.example.com
  description: Production server
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /api/v1/auth/login
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error message
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: user@example.com
        role:
          type: string
          example: user
        verified:
          type: boolean
          example: true
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    Role:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: admin
        description:
          type: string
          example: Administrator role
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    Tokens:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9...
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9...
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          example: 900
